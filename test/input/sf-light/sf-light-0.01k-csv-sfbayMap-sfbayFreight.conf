include "../common/akka.conf"
include "../common/akka-router.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"
include "sf-light-1k.conf"

beam.agentsim.simulationName = "sf-light-0.01k-csv-sfbayMap-sfbayFreight"
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.01

beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 3

beam.exchange.scenario {
  source = "beam"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/csvInput/"
  convertWgs2Utm = true
}
beam.agentsim.agents.plans {
  inputPlansFilePath = ${beam.inputDirectory}"/csvInput/plans.csv"
  inputPersonAttributesFilePath = ${beam.inputDirectory}"/csvInput/population.csv"
}
beam.agentsim.agents.households {
  inputFilePath = ${beam.inputDirectory}"/csvInput/households.csv"
  inputHouseholdAttributesFilePath = ""
}
beam.agentsim.agents.vehicles.vehiclesFilePath = ${beam.inputDirectory}"/csvInput/vehicles.csv"
beam.physsim.skipPhysSim = true

beam.agentsim.agents.freight {
  enabled = true
  plansFilePath = ${beam.inputDirectory}"/../../../production/sfbay/freight/freight-merged-payload-plans-bad.csv"
  toursFilePath = ${beam.inputDirectory}"/../../../production/sfbay/freight/freight-merged-tours-bad.csv"
  carriersFilePath = ${beam.inputDirectory}"/../../../production/sfbay/freight/freight-merged-carriers-bad.csv"
  convertWgs2Utm = true
}

beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes+freight.csv"

# using huge map in order to have freight agents
# because they are not fit into small map
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/../../../production/sfbay/r5-simple-no-local/physsim-network.xml"
beam.routing {
  # Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2017-09-22T00:00:00-07:00"
  transitOnStreetNetwork = true
  r5 {
    directory = ${beam.inputDirectory}"/../../../production/sfbay/r5-simple-no-local"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/../../../production/sfbay/r5-simple-no-local/sf-bay.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/../../../production/sfbay/r5-simple-no-local/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}
